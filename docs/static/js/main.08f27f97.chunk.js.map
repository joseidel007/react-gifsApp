{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","value","onChange","target","getGif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMA0CeA,EAvCK,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAEpB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAuBA,OACI,sBAAMC,SAhBY,SAACC,GACnBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAWlB,SACI,uBACIO,MAAQR,EACRS,SAvBc,SAACN,GACvBF,EAAcE,EAAEO,OAAOF,a,+BCVlBG,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEZC,EAFY,iDAEoCC,UAAUH,GAF9C,+DAKCI,MAAOF,GALR,cAKZG,EALY,gBAOKA,EAAKC,OAPV,uBAOVC,EAPU,EAOVA,KACFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZxB,kBAeXM,GAfW,4CAAH,sDCENO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGrC,OACI,sBAAKc,UAAU,uBAAf,UACI,qBAAKC,IAAOf,EAAMgB,IAAON,IACzB,kCAAMA,SCHLO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECHwB,SAAEA,GAE1B,MAA0Bb,mBAAS,CAC/BoB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAoBA,OAfAC,qBAAW,WACPxB,EAAQC,GACHwB,MAAO,SAAAC,GAEJC,YAAY,WACRJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEf,UAIX,CAAEpB,IAEEqB,EDnBwBM,GAAnBd,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAEpB,OACI,qCACI,mCAAOpB,EAAP,OAEEoB,GAAW,wCAEb,qBAAKJ,UAAU,YAAf,SAIYH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADGA,EAAIC,aEiB7BiB,EAlCM,WAIjB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAMA,OACI,qCACK,8CACA,cAAC,EAAD,CAAaA,cAAkBA,IAChC,uBAGA,6BAEQ2C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAGIA,SAAaA,GADLA,Y,MCrBpC8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.08f27f97.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ( { setCategories } ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n\r\n    }\r\n    const handledSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2){\r\n            setCategories( cats => [inputValue, ...cats ] );\r\n            setInputValue('');\r\n        }\r\n        \r\n        // console.log('Submit Hecho!!!');\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <form onSubmit={ handledSubmit }>\r\n            <input\r\n                value={ inputValue }\r\n                onChange={  handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory","export const getGif = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=eF44gWNZpU4Dzp7nAk1i4DgByPkqlGdG`;\r\n\r\n    \r\n    const resp = await fetch( url );\r\n\r\n    const { data } = await resp.json();\r\n    const gifs = data.map( img => {\r\n        return { \r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n    // console.log(id,title,url)\r\n    return (\r\n        <div className='card animate__bounce' >\r\n            <img src= { url } alt= { title }/>\r\n            <p> { title }</p>\r\n        </div>\r\n    )\r\n}\r\n","// import React, {useState, useEffect} from 'react';\r\nimport React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n\r\n    const {data:images, loading} = useFetchGifs();\r\n\r\n    return (\r\n        <>\r\n            <h3> { category } </h3>\r\n\r\n            { loading && <p>Loading</p> }\r\n\r\n            <div className='card-grid'>\r\n                \r\n                    \r\n                    {\r\n                        images.map( img => (\r\n                            <GifGridItem\r\n                                key = { img.id }\r\n                                { ...img }\r\n\r\n                            />\r\n\r\n                        )) \r\n                    }\r\n            </div>\r\n            </>\r\n    )\r\n}","import { useState,useEffect } from 'react';\r\nimport { getGif } from '../helpers/GetGifs';\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect( () => {\r\n        getGif( category )\r\n            .then ( imgs => {\r\n\r\n                setTimeout( () =>{\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n                },3000 )\r\n\r\n                })\r\n                \r\n    }, [ category ])\r\n\r\n    return state;\r\n\r\n}\r\n","import React, { useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () =>{\r\n\r\n\r\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () =>{\r\n    //     setCategories( [...categories,'HunterXHunter'] );\r\n    // }\r\n\r\n    return (\r\n        <>\r\n             <h2>GifExpertApp</h2>\r\n             <AddCategory setCategories = { setCategories }/>\r\n            <hr/>\r\n            {/* <button onClick={ handleAdd }>Agregar</button> */}\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid\r\n                            \r\n                            key = { category }\r\n                            category = { category }\r\n                        />\r\n                        // return <li key={ category } > { category  }</li>\r\n                    ) )\r\n                }\r\n            </ol>\r\n        </>\r\n       \r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}